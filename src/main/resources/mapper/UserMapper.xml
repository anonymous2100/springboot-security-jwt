<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctgu.mapper.UserMapper">

	<resultMap id="BaseResultMap" type="com.ctgu.model.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="icon" jdbcType="VARCHAR" property="icon" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="nick_name" jdbcType="VARCHAR"
			property="nickName" />
		<result column="note" jdbcType="VARCHAR" property="note" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="login_time" jdbcType="TIMESTAMP"
			property="loginTime" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		t_user
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insert" parameterType="com.ctgu.model.User">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_user (username, password, icon,
		email, nick_name,
		note,
		create_time, login_time, status
		)
		values
		(#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{note,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{loginTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER}
		)
	</insert>

	<update id="updateByPrimaryKey"
		parameterType="com.ctgu.model.User">
		update t_user
		set username =
		#{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		icon = #{icon,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		nick_name = #{nickName,jdbcType=VARCHAR},
		note =
		#{note,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		login_time =
		#{loginTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select id, username, password, icon, email, nick_name, note,
		create_time,
		login_time,
		status
		from t_user
		where id =
		#{id,jdbcType=BIGINT}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select id, username, password,
		icon, email, nick_name, note, create_time,
		login_time,
		status
		from
		t_user
	</select>

	<select id="selectByUsername" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select id, username, password, icon, email, nick_name, note,
		create_time,
		login_time,
		status
		from t_user
		where username like
		#{username}
	</select>

	<select id="findByUsername" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select id, username, password, icon, email, nick_name, note,
		create_time,
		login_time,
		status
		from t_user
		where username = #{username}
	</select>

</mapper>